#!/usr/bin/env node


// Express can launch a www executable to handle certain tasks.
// www goes in bin (sometimes .bin to keep it hidden)

// This way, we can set certain properties here
// rather than having them take up space in server.js.
var debug = require('debug')('express-example');

// we bring in the app we exported from server.js
var app = require('../server');

// we bring in the models we exported with index.js
var models = require("../models");

// we set the port of the app
app.set('port', process.env.PORT || 3000);

//development only
if('development' === app.get('env')) {
	app.use(express.errorHandler());
}


// we sync the models with our db 
// (thus creating the apropos tables)
// models.sequelize.sync().then(function () {
// 	// set our app to listen to the port we set above
//   var server = app.listen(app.get('port'), function() {
//   	// then save a log of the listening to our debugger.
//     debug('Express server listening on port ' + server.address().port);
//   });
// });

/////////////////////////
//Trying this new function from the sequelize docs to try to sync the database and 
//deploy to heroku

db.sequelize.sync().then(function() {
  http.createServer(app).listen(app.get('port'), function(){
    console.log('Express server listening on port ' + app.get('port'));
  });
});
